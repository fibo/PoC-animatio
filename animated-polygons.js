import { createSvg, createSvgElement, html } from './assets/utils.js'

const frames = [
  {
    polygons: [
      {
        points:"8.333333333333334,-8.33333134651184 8.333333333333334,8.333335320154825 6.25,6.250002235174179 6.25,-6.249997764825821"
      },
      {
        points:"6.25,-6.249997764825821 6.25,6.250002235174179 -6.25,6.250002235174179 -6.25,-6.249997764825821"
      },
      {
        points:"-6.25,-6.249997764825821 -6.25,6.250002235174179 -8.333333333333334,8.333335320154825 -8.333333333333334,-8.33333134651184"
      },
      {
        points:"-8.333333333333334,-8.33333134651184 -8.333333333333334,8.333335320154825 8.333333333333334,8.333335320154825 8.333333333333334,-8.33333134651184"
      },
      {
        points:"6.25,-6.249997764825821 -6.25,-6.249997764825821 -8.333333333333334,-8.33333134651184 8.333333333333334,-8.33333134651184"
      },
      {
        points:"-6.25,6.250002235174179 6.25,6.250002235174179 8.333333333333334,8.333335320154825 -8.333333333333334,8.333335320154825"
      },
    ]
  },
  {
    polygons: [
      {
        points: "5.592750669615895,-8.71091110461659 5.592750669615895,8.710915258303677 8.244353982568141,6.542758539315901 8.244353982568141,-6.542753859571992",
      },
      {
        points: "8.244353982568141,-6.542753859571992 8.244353982568141,6.542758539315901 -3.886403219372578,6.053216948003854 -3.886403219372578,-6.053212618407251",
      },
      {
        points: "-3.886403219372578,-6.053212618407251 -3.886403219372578,6.053216948003854 -9.909415942119201,7.864158693707106 -9.909415942119201,-7.864154475044643",
      },
      {
        points: "-9.909415942119201,-7.864154475044643 -9.909415942119201,7.864158693707106 5.592750669615895,8.710915258303677 5.592750669615895,-8.71091110461659",
      },
      {
        points: "8.244353982568141,-6.542753859571992 -3.886403219372578,-6.053212618407251 -9.909415942119201,-7.864154475044643 5.592750669615895,-8.71091110461659",
      },
      {
        points: "-3.886403219372578,6.053216948003854 8.244353982568141,6.542758539315901 5.592750669615895,8.710915258303677 -9.909415942119201,7.864158693707106",
      },
    ]
  },
  {
    polygons: [
      {
        points: "1.9741561565645382,-8.923473277213265 1.9741561565645382,8.92347753225792 9.671495106880794,6.924028796579191 9.671495106880794,-6.9240242568337695",
      },
      {
        points: "9.671495106880794,-6.9240242568337695 9.671495106880794,6.924028796579191 -1.3173572507136826,5.954650137966321 -1.3173572507136826,-5.95464587887017",
      },
      {
        points: "-1.3173572507136826,-5.95464587887017 -1.3173572507136826,5.954650137966321 -10.302773115030718,7.375973253437105 -10.302773115030718,-7.375969296657657",
      },
      {
        points: "-10.302773115030718,-7.375969296657657 -10.302773115030718,7.375973253437105 1.9741561565645382,8.92347753225792 1.9741561565645382,-8.923473277213265",
      },
      {
        points: "9.671495106880794,-6.9240242568337695 -1.3173572507136826,-5.95464587887017 -10.302773115030718,-7.375969296657657 1.9741561565645382,-8.923473277213265",
      },
      {
        points: "-1.3173572507136826,5.954650137966321 9.671495106880794,6.924028796579191 1.9741561565645382,8.92347753225792 -10.302773115030718,7.375973253437105",
      },
    ]
  },
  {
    polygons: [
      {
        points: "-1.9741572203257016,-8.923473277213265 -1.9741572203257016,8.92347753225792 10.302773115030718,7.375973253437105 10.302773115030718,-7.375969296657657",
      },
      {
        points: "10.302773115030718,-7.375969296657657 10.302773115030718,7.375973253437105 1.3173579605630412,5.954650137966321 1.3173579605630412,-5.95464587887017",
      },
      {
        points: "1.3173579605630412,-5.95464587887017 1.3173579605630412,5.954650137966321 -9.671495106880794,6.924028796579191 -9.671495106880794,-6.9240242568337695",
      },
      {
        points: "-9.671495106880794,-6.9240242568337695 -9.671495106880794,6.924028796579191 -1.9741572203257016,8.92347753225792 -1.9741572203257016,-8.923473277213265",
      },
      {
        points: "10.302773115030718,-7.375969296657657 1.3173579605630412,-5.95464587887017 -9.671495106880794,-6.9240242568337695 -1.9741572203257016,-8.923473277213265",
      },
      {
        points: "1.3173579605630412,5.954650137966321 10.302773115030718,7.375973253437105 -1.9741572203257016,8.92347753225792 -9.671495106880794,6.924028796579191",
      },
    ]
  },
  {
    polygons: [
      {
        points: "-5.5927517080376665,-8.71091110461659 -5.5927517080376665,8.710915258303677 9.909415747829414,7.8641592835068135 9.909415747829414,-7.864155064844034",
      },
      {
        points: "9.909415747829414,-7.864155064844034 9.909415747829414,7.8641592835068135 3.886403940972012,6.053216948003854 3.886403940972012,-6.053212618407251",
      },
      {
        points: "3.886403940972012,-6.053212618407251 3.886403940972012,6.053216948003854 -8.244352688191366,6.542758131070134 -8.244352688191366,-6.542753451326517",
      },
      {
        points: "-8.244352688191366,-6.542753451326517 -8.244352688191366,6.542758131070134 -5.5927517080376665,8.710915258303677 -5.5927517080376665,-8.71091110461659",
      },
      {
        points: "9.909415747829414,-7.864155064844034 3.886403940972012,-6.053212618407251 -8.244352688191366,-6.542753451326517 -5.5927517080376665,-8.71091110461659",
      },
      {
        points: "3.886403940972012,6.053216948003854 9.909415747829414,7.8641592835068135 -5.5927517080376665,8.710915258303677 -8.244352688191366,6.542758131070134",
      },
    ]
  },
  {
    polygons: [
      {
        points: "-8.333333333333334,-8.33333134651184 -8.333333333333334,8.333335320154825 8.33333283662796,8.333335320154825 8.33333283662796,-8.33333134651184",
      },
      {
        points: "8.33333283662796,-8.33333134651184 8.33333283662796,8.333335320154825 6.25,6.250002235174179 6.25,-6.249997764825821",
      },
      {
        points: "6.25,-6.249997764825821 6.25,6.250002235174179 -6.24999962747097,6.250002235174179 -6.24999962747097,-6.249997764825821",
      },
      {
        points: "-6.24999962747097,-6.249997764825821 -6.24999962747097,6.250002235174179 -8.333333333333334,8.333335320154825 -8.333333333333334,-8.33333134651184",
      },
      {
        points: "8.33333283662796,-8.33333134651184 6.25,-6.249997764825821 -6.24999962747097,-6.249997764825821 -8.333333333333334,-8.33333134651184",
      },
      {
        points: "6.25,6.250002235174179 8.33333283662796,8.333335320154825 -8.333333333333334,8.333335320154825 -6.24999962747097,6.250002235174179",
      },
    ]
  }
]

class AnimatedPolygons extends HTMLElement {
  static localName = 'animated-polygons'
  static template = html`
    <style>
      :host {
        display: block;
        width: 100px;
        height: 100px;
        border: 2px solid gainsboro;
        border-radius: var(--radius-s);
      }
    </style>
  `

  polygonElements = []

  constructor() {
    super()
    this.attachShadow({ mode: 'open' })
    this.shadowRoot.appendChild(AnimatedPolygons.template.content.cloneNode(true))
    const svg = this.svg = createSvg(100, 100)
    this.shadowRoot.appendChild(svg)
  }

  connectedCallback() {
    // TODO svg should be already centered
    this.svg.set('viewBox', '-20 -20 50 50')
    this.start()
  }

  start() {
    function* animate(self) {
      for (const { polygons } of frames) {
        for (let i = 0; i < polygons.length; i++) {
          // Get polygon element or create it if it does not exists.
          let polygon = self.polygonElements[i]
          if (!polygon) {
            polygon = createSvgElement('polygon')
            self.polygonElements[i] = polygon
            polygon.set('fill', 'red').set('stroke', 'black')
            self.svg.appendChild(polygon)
          }
          polygon.set('points', polygons[i].points)
        }
        yield
      }
    }

    const FPS = 20
    const deltaT = Math.floor(1000 / FPS)
    let lastFrameTime = document.timeline.currentTime - deltaT
    const animation = animate(this)
    function loop() {
      if (document.timeline.currentTime > lastFrameTime + deltaT) {
        const { done } = animation.next()
        if (done) return
        lastFrameTime = document.timeline.currentTime
      }
      requestAnimationFrame(loop)
    }
    loop()
  }
}

addEventListener('load', () => {
  customElements.define(AnimatedPolygons.localName, AnimatedPolygons)
})
